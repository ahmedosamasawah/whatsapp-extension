{"version":3,"file":"background.js","sources":["../../src/api/providers/BaseProvider.js","../../src/utils/template.js","../../src/utils/apiErrors.js","../../src/api/providers/OpenAIProvider.js","../../src/api/index.js","../../node_modules/.pnpm/idb-keyval@6.2.1/node_modules/idb-keyval/dist/index.js","../../src/services/storageService.js","../../src/background/background.js"],"sourcesContent":["/** @param {Object} config @returns {Object} */\nexport function createBaseProvider(config = {}) {\n  return {\n    config,\n    verifyApiKey: async (apiKey) => {\n      throw new Error(\"Function 'verifyApiKey' must be implemented\");\n    },\n\n    transcribeAudio: async (audioBlob, options = {}) => {\n      throw new Error(\"Function 'transcribeAudio' must be implemented\");\n    },\n\n    processTranscription: async (transcription, options = {}) => {\n      throw new Error(\"Function 'processTranscription' must be implemented\");\n    },\n  };\n}\n","/** @param {string} template @param {Object} variables @returns {string} */\nexport function renderTemplate(template, variables = {}) {\n  return template.replace(/\\{\\{([^}]+)\\}\\}/g, (match, key) => {\n    const trimmedKey = key.trim();\n    return variables[trimmedKey] !== undefined ? variables[trimmedKey] : match;\n  });\n}\n\nexport const defaultTemplates = {\n  openai: {\n    processing: `You are an AI assistant that processes WhatsApp voice message transcriptions. Process the following transcript following these exact instructions:\n\nYour response MUST follow this exact format with FOUR sections separated by '----':\n[original transcript] ---- [grammatically corrected version in {{language}}]\\n[English translation] ---- [concise summary in English] ---- [natural reply in {{language}}]\n\nInstructions for each section:\n1. First section: Copy the original transcript exactly as provided.\n2. Second section: Create a grammatically correct, polished version of the transcript in {{language}}. Remove filler words, false starts, and repetitions. Maintain the original meaning. Then, on the next line, provide the English translation.\n3. Third section: Write a concise 1-2 sentence summary in English that captures the core message and key information from the transcript.\n4. Fourth section: Suggest a natural, conversational reply in {{language}} that directly addresses the main points or questions from the message. The reply should sound like something a real person would say in a WhatsApp conversation (not formal or robotic).\n\nUse ONLY '----' as separators with no additional text, headers, or explanations.\n\nTRANSCRIPT:\n{{transcription}}`,\n  },\n};\n","/** @param {string} errorText @param {string} defaultMessage @returns {Object} */\nexport function parseOpenAIError(\n  errorText,\n  defaultMessage = \"API request failed\"\n) {\n  try {\n    const errorData = JSON.parse(errorText);\n\n    if (!errorData.error)\n      return {\n        message: defaultMessage,\n        type: \"unknown\",\n        userMessage:\n          \"There was an error processing your request. Please try again.\",\n      };\n\n    switch (errorData.error.type) {\n      case \"insufficient_quota\":\n        return {\n          message:\n            \"Your OpenAI API key has reached its usage limit. Please check your billing details or use a different API key.\",\n          type: \"quota_exceeded\",\n          userMessage:\n            \"Your API key has reached its usage limit. Please check your OpenAI account billing details or update your API key.\",\n        };\n\n      case \"invalid_request_error\":\n        return {\n          message: errorData.error.message || \"Invalid request to the API\",\n          type: \"invalid_request\",\n          userMessage:\n            \"There was a problem with the request. Please check your settings.\",\n        };\n\n      case \"authentication_error\":\n        return {\n          message: \"Authentication failed. Please check your API key.\",\n          type: \"authentication\",\n          userMessage:\n            \"Your API key appears to be invalid. Please check your settings.\",\n        };\n\n      default:\n        return {\n          message: errorData.error.message || defaultMessage,\n          type: errorData.error.type || \"unknown\",\n          userMessage:\n            \"There was an error processing your request. Please try again.\",\n        };\n    }\n  } catch (parseError) {\n    return {\n      message: errorText || defaultMessage,\n      type: \"unknown\",\n      userMessage:\n        \"There was an error processing your request. Please try again.\",\n    };\n  }\n}\n\n/**\n * Format error for display in the transcription UI\n * @param {Error|string} error - Error object or message\n * @returns {{transcript: string, cleaned: string, summary: string, reply: string}}\n */\nexport function formatTranscriptionError(error) {\n  const errorMessage = typeof error === \"string\" ? error : error.message;\n\n  return {\n    transcript: `ERROR: ${errorMessage}`,\n    cleaned: errorMessage.includes(\"API key has reached its usage limit\")\n      ? \"Please update your API key in the extension settings or check your OpenAI account billing details.\"\n      : \"Try again later or check the extension settings.\",\n    summary: \"\",\n    reply: \"\",\n  };\n}\n","import { createBaseProvider } from \"./BaseProvider.js\";\nimport { renderTemplate, defaultTemplates } from \"../../utils/template.js\";\nimport { parseOpenAIError } from \"../../utils/apiErrors.js\";\n\n/** @param {Object} config @returns {Object} */\nexport function createOpenAIProvider(config = {}) {\n  const provider = {\n    ...createBaseProvider(config),\n    apiKey: config.apiKey,\n    apiUrl: \"https://api.openai.com\",\n    transcriptionModel: config.transcriptionModel || \"whisper-1\",\n    processingModel: config.processingModel || \"gpt-4o\",\n\n    verifyApiKey: async (apiKey) => {\n      if (!apiKey) return { valid: false, error: \"API key is empty\" };\n      if (!apiKey.startsWith(\"sk-\"))\n        return { valid: false, error: \"Invalid API key format\" };\n\n      try {\n        const response = await fetch(`${provider.apiUrl}/v1/models`, {\n          method: \"GET\",\n          headers: {\n            Authorization: `Bearer ${apiKey}`,\n            \"Content-Type\": \"application/json\",\n          },\n        });\n\n        if (!response.ok) {\n          const errorText = await response.text();\n          const errorData = parseOpenAIError(errorText, \"Invalid API key\");\n\n          return {\n            valid: false,\n            error: errorData.message,\n          };\n        }\n\n        return { valid: true };\n      } catch (error) {\n        return { valid: false, error: error.message || \"Network error\" };\n      }\n    },\n\n    transcribeAudio: async (audioBlob, options = {}) => {\n      if (!provider.apiKey) throw new Error(\"API key not configured\");\n\n      const formData = new FormData();\n      formData.append(\"model\", provider.transcriptionModel);\n      formData.append(\n        \"file\",\n        new File([audioBlob], \"audio.ogg\", { type: audioBlob.type })\n      );\n\n      if (options.language && options.language !== \"auto\")\n        formData.append(\"language\", options.language);\n\n      const response = await fetch(\n        `${provider.apiUrl}/v1/audio/transcriptions`,\n        {\n          method: \"POST\",\n          headers: {\n            Authorization: `Bearer ${provider.apiKey}`,\n          },\n          body: formData,\n        }\n      );\n\n      if (!response.ok) {\n        const errorText = await response.text();\n        const errorData = parseOpenAIError(errorText, \"Transcription failed\");\n        throw new Error(errorData.message);\n      }\n\n      const result = await response.json();\n      return result.text;\n    },\n\n    processTranscription: async (transcription, options = {}) => {\n      if (!provider.apiKey) throw new Error(\"API key not configured\");\n\n      const promptTemplate =\n        options.promptTemplate || defaultTemplates.openai.processing;\n\n      const promptContent = renderTemplate(promptTemplate, {\n        transcription,\n        language: options.language || \"auto\",\n      });\n\n      const response = await fetch(`${provider.apiUrl}/v1/chat/completions`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${provider.apiKey}`,\n        },\n        body: JSON.stringify({\n          model: provider.processingModel,\n          messages: [\n            {\n              role: \"user\",\n              content: promptContent,\n            },\n          ],\n        }),\n      });\n\n      if (!response.ok) {\n        const errorText = await response.text();\n        const errorData = parseOpenAIError(errorText, \"Processing failed\");\n        throw new Error(errorData.message);\n      }\n\n      const result = await response.json();\n      const content = result.choices[0].message.content;\n      return parseProcessedResponse(content, transcription);\n    },\n  };\n\n  return provider;\n}\n\n/** @param {string} response @param {string} originalTranscription @returns {{transcript: string, cleaned: string, summary: string, reply: string}} */\nfunction parseProcessedResponse(response, originalTranscription) {\n  const result = {\n    transcript: originalTranscription,\n    cleaned: \"\",\n    summary: \"\",\n    reply: \"\",\n  };\n\n  try {\n    const sections = response.split(\"----\").map((s) => s.trim());\n\n    if (sections.length < 4) {\n      console.warn(\"Unexpected response format:\", response); // TODO: Remove\n      result.cleaned = response.trim();\n      result.summary = \"Error: AI response was not in the expected format\";\n      result.reply = \"Please try transcribing again\";\n      return result;\n    }\n\n    result.cleaned = sections[1] || \"\";\n    result.summary = sections[2] || \"\";\n    result.reply = sections[3] || \"\";\n\n    if (!result.cleaned || !result.summary || !result.reply) {\n      console.warn(\"Missing sections in response:\", sections); // TODO: Remove\n      result.summary =\n        result.summary ||\n        \"Error: Some sections were missing from the AI response\";\n      result.reply = result.reply || \"Please try transcribing again\";\n    }\n  } catch (error) {\n    console.error(\"Parsing error:\", error.message); // TODO: Remove\n    result.cleaned = response.trim();\n    result.summary = \"Error: Could not process AI response\";\n    result.reply = \"Please try transcribing again\";\n  }\n\n  return result;\n}\n","import { createOpenAIProvider } from \"./providers/OpenAIProvider.js\";\n\nconst PROVIDERS = {\n  openai: createOpenAIProvider,\n  // Future providers can be added here:\n  // claude: createClaudeProvider,\n};\n\n/** @param {string} type @param {Object} config @returns {Object} @throws {Error} */\nexport function getProvider(type, config = {}) {\n  const createProvider = PROVIDERS[type];\n\n  if (!createProvider) throw new Error(`Unsupported provider type: ${type}`);\n\n  return createProvider(config);\n}\n\n/** @returns {Array<string>} */\nexport function getSupportedProviders() {\n  return Object.keys(PROVIDERS);\n}\n\n/** @returns {string} */\nexport function getDefaultProviderType() {\n  return \"openai\";\n}\n","function promisifyRequest(request) {\n    return new Promise((resolve, reject) => {\n        // @ts-ignore - file size hacks\n        request.oncomplete = request.onsuccess = () => resolve(request.result);\n        // @ts-ignore - file size hacks\n        request.onabort = request.onerror = () => reject(request.error);\n    });\n}\nfunction createStore(dbName, storeName) {\n    const request = indexedDB.open(dbName);\n    request.onupgradeneeded = () => request.result.createObjectStore(storeName);\n    const dbp = promisifyRequest(request);\n    return (txMode, callback) => dbp.then((db) => callback(db.transaction(storeName, txMode).objectStore(storeName)));\n}\nlet defaultGetStoreFunc;\nfunction defaultGetStore() {\n    if (!defaultGetStoreFunc) {\n        defaultGetStoreFunc = createStore('keyval-store', 'keyval');\n    }\n    return defaultGetStoreFunc;\n}\n/**\n * Get a value by its key.\n *\n * @param key\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction get(key, customStore = defaultGetStore()) {\n    return customStore('readonly', (store) => promisifyRequest(store.get(key)));\n}\n/**\n * Set a value with a key.\n *\n * @param key\n * @param value\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction set(key, value, customStore = defaultGetStore()) {\n    return customStore('readwrite', (store) => {\n        store.put(value, key);\n        return promisifyRequest(store.transaction);\n    });\n}\n/**\n * Set multiple values at once. This is faster than calling set() multiple times.\n * It's also atomic – if one of the pairs can't be added, none will be added.\n *\n * @param entries Array of entries, where each entry is an array of `[key, value]`.\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction setMany(entries, customStore = defaultGetStore()) {\n    return customStore('readwrite', (store) => {\n        entries.forEach((entry) => store.put(entry[1], entry[0]));\n        return promisifyRequest(store.transaction);\n    });\n}\n/**\n * Get multiple values by their keys\n *\n * @param keys\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction getMany(keys, customStore = defaultGetStore()) {\n    return customStore('readonly', (store) => Promise.all(keys.map((key) => promisifyRequest(store.get(key)))));\n}\n/**\n * Update a value. This lets you see the old value and update it as an atomic operation.\n *\n * @param key\n * @param updater A callback that takes the old value and returns a new value.\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction update(key, updater, customStore = defaultGetStore()) {\n    return customStore('readwrite', (store) => \n    // Need to create the promise manually.\n    // If I try to chain promises, the transaction closes in browsers\n    // that use a promise polyfill (IE10/11).\n    new Promise((resolve, reject) => {\n        store.get(key).onsuccess = function () {\n            try {\n                store.put(updater(this.result), key);\n                resolve(promisifyRequest(store.transaction));\n            }\n            catch (err) {\n                reject(err);\n            }\n        };\n    }));\n}\n/**\n * Delete a particular key from the store.\n *\n * @param key\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction del(key, customStore = defaultGetStore()) {\n    return customStore('readwrite', (store) => {\n        store.delete(key);\n        return promisifyRequest(store.transaction);\n    });\n}\n/**\n * Delete multiple keys at once.\n *\n * @param keys List of keys to delete.\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction delMany(keys, customStore = defaultGetStore()) {\n    return customStore('readwrite', (store) => {\n        keys.forEach((key) => store.delete(key));\n        return promisifyRequest(store.transaction);\n    });\n}\n/**\n * Clear all values in the store.\n *\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction clear(customStore = defaultGetStore()) {\n    return customStore('readwrite', (store) => {\n        store.clear();\n        return promisifyRequest(store.transaction);\n    });\n}\nfunction eachCursor(store, callback) {\n    store.openCursor().onsuccess = function () {\n        if (!this.result)\n            return;\n        callback(this.result);\n        this.result.continue();\n    };\n    return promisifyRequest(store.transaction);\n}\n/**\n * Get all keys in the store.\n *\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction keys(customStore = defaultGetStore()) {\n    return customStore('readonly', (store) => {\n        // Fast path for modern browsers\n        if (store.getAllKeys) {\n            return promisifyRequest(store.getAllKeys());\n        }\n        const items = [];\n        return eachCursor(store, (cursor) => items.push(cursor.key)).then(() => items);\n    });\n}\n/**\n * Get all values in the store.\n *\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction values(customStore = defaultGetStore()) {\n    return customStore('readonly', (store) => {\n        // Fast path for modern browsers\n        if (store.getAll) {\n            return promisifyRequest(store.getAll());\n        }\n        const items = [];\n        return eachCursor(store, (cursor) => items.push(cursor.value)).then(() => items);\n    });\n}\n/**\n * Get all entries in the store. Each entry is an array of `[key, value]`.\n *\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction entries(customStore = defaultGetStore()) {\n    return customStore('readonly', (store) => {\n        // Fast path for modern browsers\n        // (although, hopefully we'll get a simpler path some day)\n        if (store.getAll && store.getAllKeys) {\n            return Promise.all([\n                promisifyRequest(store.getAllKeys()),\n                promisifyRequest(store.getAll()),\n            ]).then(([keys, values]) => keys.map((key, i) => [key, values[i]]));\n        }\n        const items = [];\n        return customStore('readonly', (store) => eachCursor(store, (cursor) => items.push([cursor.key, cursor.value])).then(() => items));\n    });\n}\n\nexport { clear, createStore, del, delMany, entries, get, getMany, keys, promisifyRequest, set, setMany, update, values };\n","import * as kv from \"idb-keyval\";\n\n/** @param {string} key @param {string} [storageType='local'] @returns {Promise<any>} */\nexport async function get(key, storageType = \"local\") {\n  if (storageType === \"indexedDB\") return await kv.get(key);\n  else {\n    return new Promise((resolve) =>\n      chrome.storage[storageType].get([key], (result) =>\n        resolve(result[key] !== undefined ? result[key] : null)\n      )\n    );\n  }\n}\n\n/** @param {string} key @param {any} value @param {string|Array<string>} [storageType='local'] @returns {Promise<boolean>} */\nexport async function set(key, value, storageType = \"local\") {\n  const storageTypes = Array.isArray(storageType) ? storageType : [storageType];\n\n  const promises = storageTypes.map((type) => {\n    if (type === \"indexedDB\") return kv.set(key, value);\n    else\n      return new Promise((resolve) => {\n        const data = {};\n        data[key] = value;\n        chrome.storage[type].set(data, () => {\n          const error = chrome.runtime.lastError;\n          resolve(!error);\n        });\n      });\n  });\n\n  await Promise.all(promises);\n  return true;\n}\n\n/** @param {string} [storageType='local'] @returns {Promise<Object>} */\nexport async function getAll(storageType = \"local\") {\n  if (storageType === \"indexedDB\") return await kv.entries();\n  else\n    return new Promise((resolve) => {\n      chrome.storage[storageType].get(null, (items) => {\n        resolve(items || {});\n      });\n    });\n}\n\n/** @param {string} key @param {string|Array<string>} [storageType='local'] @returns {Promise<boolean>} */\nexport async function remove(key, storageType = \"local\") {\n  const storageTypes = Array.isArray(storageType) ? storageType : [storageType];\n\n  const promises = storageTypes.map((type) => {\n    if (type === \"indexedDB\") return kv.del(key);\n    else\n      return new Promise((resolve) => {\n        chrome.storage[type].remove(key, () => {\n          const error = chrome.runtime.lastError;\n          resolve(!error);\n        });\n      });\n  });\n\n  await Promise.all(promises);\n  return true;\n}\n\n/** @param {string} id @param {Object} transcriptionData @returns {Promise<boolean>} */\nexport async function saveTranscription(id, transcriptionData) {\n  const storedData = (await get(\"wa-transcriptions\", \"indexedDB\")) || {};\n  storedData[id] = transcriptionData;\n\n  await set(\"wa-transcriptions\", storedData, \"indexedDB\");\n\n  return true;\n}\n\n/** @returns {Promise<Map<string, Object>>} */\nexport async function getTranscriptions() {\n  const storedData = (await get(\"wa-transcriptions\", \"indexedDB\")) || {};\n  return new Map(Object.entries(storedData));\n}\n","import { getProvider } from \"../api/index.js\";\nimport * as storageService from \"../services/storageService.js\";\n\nfunction debounce(func, wait) {\n  let timeout;\n  return function executedFunction(...args) {\n    const later = () => {\n      clearTimeout(timeout);\n      func(...args);\n    };\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  };\n}\n\nconst notifyWhatsappTabs = debounce(async () => {\n  try {\n    const tabs = await chrome.tabs.query({\n      url: \"https://web.whatsapp.com/*\",\n    });\n\n    if (tabs && tabs.length > 0) {\n      const messagePromises = tabs.map(\n        (tab) =>\n          new Promise((resolve) => {\n            chrome.tabs.sendMessage(\n              tab.id,\n              { action: \"settingsUpdated\" },\n              () => {\n                const lastError = chrome.runtime.lastError;\n                if (lastError)\n                  console.log(\n                    `Error sending message to tab ${tab.id}: ${lastError.message}`\n                  ); // TODO: Remove\n\n                resolve();\n              }\n            );\n          })\n      );\n\n      await Promise.all(messagePromises);\n    }\n  } catch (error) {\n    console.error(\"Error notifying WhatsApp tabs:\", error); // TODO: Remove\n  }\n}, 500);\n\n/** @type {Object.<string, Function>} */\nconst messageHandlers = {\n  /** @returns {Promise<{success: boolean}>} */\n  async openOptionsPage() {\n    chrome.runtime.openOptionsPage();\n    return { success: true };\n  },\n\n  /** @param {Object} message @returns {Promise<{valid: boolean, error?: string}>} */\n  async verifyApiKey(message) {\n    try {\n      const provider = getProvider(message.providerType || \"openai\");\n      const result = await provider.verifyApiKey(message.apiKey);\n\n      if (result.valid)\n        await storageService.set(\"apiKey\", message.apiKey, [\"local\", \"sync\"]);\n\n      return result;\n    } catch (error) {\n      return { valid: false, error: error.message };\n    }\n  },\n\n  /** @returns {Promise<{syncStorage: Object, localStorage: Object}>} */\n  async checkStorage() {\n    const syncStorage = await storageService.getAll(\"sync\");\n    const localStorage = await storageService.getAll(\"local\");\n\n    return { syncStorage, localStorage };\n  },\n\n  /** @returns {Promise<{apiKey: string|null}>} */\n  async getApiKey() {\n    const apiKey =\n      (await storageService.get(\"apiKey\", \"local\")) ||\n      (await storageService.get(\"apiKey\", \"sync\"));\n\n    return { apiKey: apiKey || null };\n  },\n\n  /** @returns {Promise<{success: boolean, warning?: string}>} */\n  async settingsUpdated() {\n    try {\n      notifyWhatsappTabs();\n      return { success: true };\n    } catch (error) {\n      console.error(\"Error in settingsUpdated:\", error); // TODO: Remove\n      return { success: true, warning: \"Error notifying tabs\" };\n    }\n  },\n};\n\nchrome.runtime.onMessage.addListener((message, sender, sendResponse) => {\n  if (!message || !message.action) return false;\n\n  const handler = messageHandlers[message.action];\n  if (!handler) return false;\n\n  handler(message, sender)\n    .then(sendResponse)\n    .catch((error) => {\n      console.error(`Error handling ${message.action}:`, error); // TODO: Remove\n      sendResponse({ error: error.message });\n    });\n\n  return true;\n});\n\nchrome.runtime.onInstalled.addListener((details) => {\n  if (details.reason === \"install\") chrome.runtime.openOptionsPage();\n});\n\n(async () => {\n  const apiKey = await storageService.get(\"apiKey\", \"sync\");\n  if (apiKey) await storageService.set(\"apiKey\", apiKey, \"local\");\n})();\n"],"names":["get","set","kv.get","kv.set","kv.entries","storageService.set","storageService.getAll","storageService.get"],"mappings":"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","x_google_ignoreList":[5]}